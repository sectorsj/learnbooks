package ru.sectorsj.book.shild.javaguade._3_data_types_vars_arrays_79_109._3_5_3_0_array_alt_sintax_106;

/**
 * 3.5.3.0 - Альтернативный синтаксис объявления массивов
 *
 * Для объявления массивов
 * можно использовать разные формы:
 * 1) 1я форма объявления массива.
 *      тип[] имя_переменной;
 *
 *      В этой форме квадратные скобки
 *      следуют за спецификатором типа,
 *      а не за именем переменной массива.
 *
 * 2) 2я форма объявления массива.
 *      тип имя_переменной[];
 *
 *      В этой форме квадратные скобки
 *      следуют после спецификатора типа,
 *      и имени переменной массива.
 *
 * Пример 1:
 * 2 равнозначных объявления массива:
 * int a1[] =new int[З];
 * int[] а2 = new int[З];
 *
 * Пример 2:
 * 2 равнозначных объявления массива.
 * char twod1 [][] = new char [3][4];
 * char[][] twod2 = new char[З][4];
 *
 * 2я форма объявления массивов
 * удобна для одновременного объявления
 * нескольких массивов.
 *
 * Пример 3:
 * 1) 1я форма создание 3 переменных массивов типа int.
 *    int[] nums, nums2, numsЗ;
 *
 * 2) 2я форма создания 3 переменных массивов типа int.
 *  int nums[], nums2[], numsЗ[];
 *
 * 2я форма объявления массивов
 * удобна для указания массива
 * в качестве типа данных,
 * возвращаемого методом.
 *
 * В дальнейшем будут использоваться
 * обе формы объявления массивов.
 */
public class ArrayAltSyntax {
    public static void main(String[] args) {

        // Пример 1:
        // Равнозначные записи
        int a1[] = new int[3];
        int[] a2 = new int[3];

        // Пример 2:
        // Равнозначные записи
        char twod1[][] = new char[3][4];
        char[][] twod2 = new char[3][4];

        // Пример 3:
        // Равнозначные записи
        int[] num1, nums2, nums3;
        int nums4[], nums5[], nums6[];
    }
}
