package ru.sectorsj.book.shild.javaguade._3_data_types_vars_arrays_79_109._3_5_1_0_one_dimensional_arrays_99;


/**
 * 3.5.1.0 - Одномерные массивы
 *
 * Одномерные массивы - это список однотипных переменных.
 *
 * Чтобы создать массив,
 * нужно объявить переменную массива
 * требуемого типа.
 *
 * Общая форма объявления одномерного массива
 * выглядит следующим образом:
 * тип имя_переменной[];
 *
 * Параметры:
 * 1) тип - обозначает тип элемента массива,
 *          называемый также базовым типом.
 *
 *          а) Тип элемента массива определяет
 *             тип данных каждого из элементов,
 *             составляющих массив.
 *
 *          б) Тип элемента массива определяет тип данных,
 *             которые будет содержать массив.
 *
 * Общая форма операции "new"
 * применительно к одномерным массивам
 * выглядит следующим образом:
 * переменная_массива = new тип [размер];
 * Параметры:
 * 1) тип                - обозначает тип данных,
 *                         для которых резервируется память;
 * 2) размер             - количество элементов в массиве;
 * 3) переменная_массива - означает переменную, связанную с массивом.
 *
 * Подробно про операцию "new" (глава 4).
 *
 * Чтобы воспользоваться операцией "new"
 * для резервирования памяти,
 * придется указать тип и количество элементов,
 * для которых требуется зарезервировать память.
 *
 * Элементы массива, для которых
 * с помощью операции "new" была выделена память,
 * будут автоматически инициализированы:
 * 1) нулевыми значениями (для числовых типов)
 * 2) логическими значениями false (для логического типа)
 * 3) пустыми значениями null (для ссылочных типов) (глава 4).
 *
 *
 * Процесс создания массива происходит в два этапа.
 *      1) объявление переменной нужного типа массива.
 *      2) с помощью операции "new" необходимо:
 *         а) зарезервировать память
 *            для хранения массива,
 *         б) присвоить ее переменной массива.
 *
 * Все массивы в Java распределяются динамически.
 *
 * Динамическое распределения памяти,
 * будет подробно описано в последующих главах.
 */
public class OneDimensionalArrays {
    public static void main(String[] args) {

        int newArray1[];
        newArray1 = new int[5];
        newArray1[0] = 13;
        newArray1[1] = 1;
        newArray1[2] = 3;
        newArray1[3] = 4;
        newArray1[4] = 6;
        // [13, 1, 3, 4, 6]


        int newArray2[] = new int[5];
        // [0, 0, 0, 0, 0]



        int newArray3[] = {10, 203, 43, 45};
        // [10, 203, 43, 45]
    }
}







