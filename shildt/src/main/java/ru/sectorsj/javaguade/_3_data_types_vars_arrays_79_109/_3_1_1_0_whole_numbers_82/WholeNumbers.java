package ru.sectorsj.javaguade._3_data_types_vars_arrays_79_109._3_1_1_0_whole_numbers_82;

/**
 * 1.1.1 - Целые числа
 *
 * <h3>
 * Для целых чисел в языке Java определены 4 типа:
 *  - byte
 *  - short
 *  - int
 *  - long
 * </h3>
 *
 * Все эти типы данных представляют целочисленные значения со знаком:
 * - положительные
 * - отрицательные
 *
 * В языке Java не поддерживаются:
 * - только положительные
 * - целочисленные значения
 * - без знака
 *
 * В других ЯП поддерживаются:
 * - целочисленные значения
 * - как со знаком
 * - так и без знака
 *
 * Понятие числовых значений без знака служило для того,
 * чтобы обозначить состояние старшего бита,
 * определяющего знак целочисленного значения.
 *
 * Java:
 * управление состоянием старшего бита
 * осуществляется с помощью специальной операции:
 *      "сдвига вправо без знака".
 *
 * Благодаря этому отпадает потребность
 * в целочисленном типе данных без знака (глава 4)
 *
 * Длина целочисленного типа означает
 * не занимаемый объем памяти,
 * а скорее поведение,
 * определяемое им для переменных
 * и выражений данного типа.
 *
 * В исполняющей среде Java может быть использована любая длина,
 * при условии, что типы данных ведут себя именно так,
 * как они объявлены.
 *
 * Длина и диапазон допустимых значений целочисленных типов данных
 * изменяются в широких пределах (Таблица 3.1)
 *
 * <h3>Таблица 3.1 Длина и диапазон допустимых значений целочисленных типов данных                        </h3>
 * <h4>| Наименование  |  Длина в битах  |           Диапазон допустимых значений                        |</h4>
 * <h4>| long          |     64          |  от -9,223,372,036,854,775,808  до 9,223,372,036,854,775,807  |</h4>
 * <h4>| int           |     32          |  от -2,147,483,648              до 2,147,483,647              |</h4>
 * <h4>| short         |     16          |  от -32768                      до 32767                      |</h4>
 * <h4>| byte          |      8          |  от -128                        до 127                        |</h4>
 *
 */
public class WholeNumbers {
}













