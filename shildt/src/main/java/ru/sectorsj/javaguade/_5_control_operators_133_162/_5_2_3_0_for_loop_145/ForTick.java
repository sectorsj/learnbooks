package ru.sectorsj.javaguade._5_control_operators_133_162._5_2_3_0_for_loop_145;


/**
 * 5.2.3.0 Цикл for
 *
 * Простая форма оператора цикла for представлена в главе 2,
 * но цикл for:
 * - эффективная
 * - универсальна
 * языковая конструкция.
 *
 * Начиная с версии JDK 5,
 * в Java имеются 2 формы оператора цикла for.
 * 1 форма - считается традиционной
 *           и появилась еще в исходной версии Java,
 * 2 форма - более новая форма цикла в стиле for each.
 *
 * Общая форма традиционного цикла for:
 *
 * for (инициализация; условие; итерация) {
 *     // тело цикла
 * }
 *
 * ВАЖНО!
 * Если в цикле повторяется
 * выполнение только 1 оператора,
 * то фигурные скобки можно опустить.
 *
 *
 * Цикл for действует следующим образом:
 *
 * 1 часть - инициализация:
 *  Это выражение устанавливающее значение
 *  переменной управления циклом,
 *  которая действует в качестве счетчика,
 *  управляющего циклом.
 *  Инициализация выполняется только один раз.
 *
 * 2 часть - вычисление заданного условия:
 * Условие должно быть логическим выражением.
 *  а) В этом выражении значение управляющей переменной
 *     сравнивается с целевым значением.
 *  б) Если результат этого сравнения истинный,
 *     то выполняется тело цикла.
 *  в) Если результат ложный, то цикл завершается.
 *
 * 3 часть - итерация:
 *  Обычно эта часть цикла
 *  содержит выражение, в котором:
 *      - увеличивается значение
 *      - уменьшается значение
 *  переменной управления циклом.
 *  Цикл повторяется, и на каждом его шаге:
 *      а) вычисляется условное выражение,
 *      б) выполняется тело цикла
 *      г) вычисляется итерационное выражение.
 *  Этот процесс повторяется до тех пор,
 *  пока результат вычисления итерационного выражения
 *  не станет ложным.
 *
 * Пример 1:
 * демонстрация применение оператора цикла for
 */
public class ForTick {

    // Пример 1:
    public static void main(String[] args) {
        int n;
        for (n = 10; n > 0; n--) {
            System.out.println("такт " + n);
        }
    }
}