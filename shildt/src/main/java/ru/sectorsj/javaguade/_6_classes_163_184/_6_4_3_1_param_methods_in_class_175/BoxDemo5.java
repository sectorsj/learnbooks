package ru.sectorsj.book.shild.javaguade._6_classes_163_184._6_4_3_1_param_methods_in_class_175;


/**
 * 6.4.3.1 - Усовершенствования класса Вох с помощью параметров.
 *
 * Методом с параметрами можно воспользоваться
 * для усовершенствования класса Вох.
 *
 * Ранее размеры каждого параллелепипеда
 * нужно было устанавливать отдельно,
 * используя последовательность операторов вроде следующей:
 *      mybox1.width = 10;
 *      mybox1.height = 20;
 *      mybox1.depth = 15;
 *
 * Приведенный выше код вполне работоспособен,
 * но он не очень удобен по нескольким причинам:
 * 1) Он громоздок и чреват ошибками.
 *    Можно вполне забыть определить
 *    один из размеров параллелепипеда.
 *
 * 2) В правильно написанных программах на Java
 *    доступ к переменным экземпляра,
 *    должен осуществляться только через методы,
 *    определенные в их классе.
 *
 * 3) В дальнейшем поведение метода можно изменить,
 *    но нельзя изменить поведение
 *    предоставляемой переменной экземпляра.
 *
 * Более рациональный способ установки размеров
 * параллелепипеда состоит в создании метода,
 * который принимает размеры параллелепипеда
 * в виде своих параметров и соответствующим образом
 * устанавливает значение каждой переменной экземпляра.
 *
 * Пример 1.1, 1.2:
 * Применение метода с параметрами.
 *
 * В примере 1.2 метод setDim() использован
 * для установки размеров каждого параллелепипеда.
 *
 * При выполнении строки кода -
 *  mybox1.setDim(1O, 20, 15);
 * происходит следующее:
 * - значение 10 - копируется в параметр w
 * - значение 20 - копируется в параметр h
 * - значение 15 - копируется в параметр d
 *
 * В теле метода setDimension() класса Box значение параметра:
 *  - "w" присваивается переменой "width"
 *  - "h" присваивается переменой "height"
 *  - "d" присваивается переменой "depth"
 *
 * Необходимо немного поэкспериментировать с вызовами методов,
 * аргументами и параметрами,
 * прежде чем продолжить изучение материала.
 */
class Box{

    // Пример 1.1:
    double width;
    double height;
    double depth;

    // Метод для расчёта и возврата объема
    double volume() {
        return width * height * depth;
    }

    // Метод для установления размеров параллелепипеда
    void setDimension(double w, double h, double d) {
        width = w;
        height = h;
        depth = d;
    }
}

public class BoxDemo5 {
    public static void main(String[] args) {

        // Пример 1.2:
        Box mybox1 = new Box();
        Box mybox2 = new Box();
        double vol;

        // Инициализировать каждый экземпляр класса Box
        mybox1.setDimension(10, 20, 15);
        mybox2.setDimension(3, 6, 9);

       // Получить объем 1-го параллелепипеда
       vol = mybox1.volume();
       System.out.println("Объем равен " + vol);

       // Получить объем 2-го параллелепипеда
       vol = mybox2.volume();
       System.out.println("Объем равен " + vol);
    }
}