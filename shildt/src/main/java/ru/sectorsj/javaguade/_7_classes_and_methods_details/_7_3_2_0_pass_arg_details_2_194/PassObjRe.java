package ru.sectorsj.book.shild.javaguade._7_classes_and_methods_details._7_3_2_0_pass_arg_details_2_194;

/**
 * 7.3.2.0 - Передача объекта при вызове по ссылке
 *
 * При передаче объекта в качестве аргумента методу,
 * эти объекты, передаются при вызове по ссылке.
 *
 * При объявлении переменной типа класса
 * создается лишь ссылка на объект этого класса.
 *
 * При передаче этой ссылки методу:
 * принимающий ее параметр будет ссылаться
 * на тот же самый объект,
 * на который ссылается и аргумент.
 *
 * Это означает:
 * 1) Объекты действуют так,
 *    как будто они передаются методам по ссылке.
 *
 * 2) Изменения объекта в теле метода,
 *    оказывают влияние на объект,
 *    указываемый в качестве аргумента.
 *
 * Пример 1.1, 1.2:
 * Передача объектов по ссылке на них
 *
 * Эта программа выводит следующий результат:
 * obj.a и obj.b до вызова: 15 20
 * obj.a и obj.b после вызова: 30 10
 *
 * Выполняемые действия в теле метода meth(),
 * оказывают влияние на объект,
 * указываемый в качестве аргумента.
 *
 * ВАЖНО!!!
 * Когда методу передается ссылка на объект,
 * сама ссылка передается способом вызова по значению.
 *
 * Но поскольку передаваемое значение ссылается на объект,
 * то копия этого значения,
 * все равно будет ссылаться на тот же самый объект,
 * что и соответствующий аргумент.
 */

// Пример 1.1:
class Test {
    int a, b;

    public Test(int i, int j) {
        a = i;
        b = j;
    }

    void meth(Test o) {
        o.a *= 2;
        o.b /= 2;
    }
}

// Пример 1.2:
class PassObjRe {
    public static void main(String[] args) {
        Test obj = new Test(15, 20);

        System.out.println("obj.a и obj.b до вызова = " + obj.a + " " + obj.b);

        obj.meth(obj);

        System.out.println("obj.a и obj.b после вызова = " + obj.a + " " + obj.b);
    }
}