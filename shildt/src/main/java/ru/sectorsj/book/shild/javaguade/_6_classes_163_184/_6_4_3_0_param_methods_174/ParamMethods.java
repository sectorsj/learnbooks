package ru.sectorsj.book.shild.javaguade._6_classes_163_184._6_4_3_0_param_methods_174;

/**
 * 6.4.3.0 - ВВОД МЕТОДА, ПРИНИМАЮЩЕГО ПАРАМЕТРЫ
 *
 * Есть методы, где:
 * - не нужны параметры
 * - требуется передача параметров
 *
 * 1) Параметры позволяют обобщить метод.
 *
 * 2) Метод с параметрами может,
 *    применяться в самых разных случаях,
 *    в т.ч. обрабатывать различные данные.
 *
 * Пример 1:
 * Метод, возвращающий квадрат числа 10
 * int square () {
 *     return 10 * 10;
 * }
 *
 * 1) Хотя этот метод square() возвращает значение
 *    10^2 (10 в степени 2),
 *    применение этого метода очень ограничено.
 *
 * 2) Если метод square() изменить
 *    чтобы он принимал параметр,
 *    то пользы от него будет много больше.
 *
 *    Пример 2:
 *    int square(int i) {
 *        return i * i;
 *    }
 *
 * 3) Теперь метод square() будет возвращать
 *    квадрат любого значения,
 *    с которым он вызывается.
 *
 * 4) метод square() теперь становится методом общего назначения,
 *    способным вычислять квадрат любого целочисленного значения,
 *    а не только числа 10.
 *
 * Пример 1.1, 1.2:
 * применение метода square():
 *
 * 1) В 1м вызове метода square()
 *    параметру "i" передается значение 5.
 *
 * 2) Во 2м вызове метода square()
 *    параметр "i" принимает значение 9.
 *
 * 3) В 3м вызове метода square()
 *    передается значение переменной "у",
 *    которое в данном примере равно 2.
 *
 * Как следует из примеров 1.1, 1.2,
 * метод square() способен возвращать квадрат
 * любых передаваемых ему числовых значений.
 *
 * В отношении методов важно различать 2 термина:
 * - параметр
 * - аргумент
 *
 * ПАРАМЕТР - это определенная в методе переменная,
 *            которая принимает заданное значение при вызове метода.
 *
 *            В методе square() параметром является переменная "i"
 *
 *
 * АРГУМЕНТ - это значение, передаваемое методу при его вызове.
 *            Т.е. это значение, которое получает параметр "i"
 *            в теле метода square().
 *
 *            При вызове square(1ОО) в качестве аргумента
 *            этому методу передается значение "1ОО".
 */
public class ParamMethods {

    // Пример 1.1
    // Инициализация метода square()
    static int square(int i) {
        return i * i;
    }

    // Пример 1.2
    public static void main(String[] args) {
        int x, y;

        // 1й вызов метода square()
        x = square(5);
        System.out.println("x = " + x);     // х = 25

        // 2й вызов метода square()
        x = square(9);
        System.out.println("x = " + x);     // х = 81

        // 3й вызов метода square()
        y = 2;
        x = square(y);
        System.out.println("x = " + x);     // х = 4
    }
}