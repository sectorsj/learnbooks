package ru.sectorsj.book.shild.javaguade._4_operations_110_132._4_1_4_0_increment_decrement_114;

/**
 * Операции инкремента и декремента
 *
 * Операции + + и - - выполняют инкремент и декремент.
 *
 * Эти операции обладают рядом особенностей:
 * 1) инкремент - увеличивает значение
 *                операнда на единицу.
 *
 * 2) декремент - уменьшает значение
 *                операнда на единицу.
 *
 * Есть 2 формы инкрементов/декрементов:
 * 1) Префиксная форма
 *    В префиксной форме значение операнда увеличивается
 *    или уменьшается до извлечения значения для применения
 *    в выражении.
 *    (--x;)
 *    (++x;)
 *
 * 2) Постфиксная форма
 *    В постфиксной форме предыдущее значение
 *    извлекается для применения в выражении,
 *    и только после этого изменяется значение операнда.
 *    (x--;)
 *    (x++;)
 *
 * Равнозначные записи:
 * x = x + 1;
 * x++;
 *
 * Равнозначные записи:
 * x = x - 1;
 * x--;
 *
 * Эти операции отличаются тем,
 * что могут быть записаны в постфиксной форме,
 * когда операция следует за операндом,
 * а также в префиксной форме,
 * когда операция предшествует операнду.
 *
 * ВАЖНО!
 * В приведенных выше примерах
 * применение любой из этих форм
 * не имеет никакого значения,
 * но когда операции инкремента и декремента
 * являются частью более сложного выражения,
 * может проявляться отличие этих двух форм.
 *
 *
 * Пример 1:
 * х = 42;
 * у = ++х;
 * В данном примере переменной "y"
 * присваивается значение 43,
 * увеличение значения переменной "х"
 * выполняется перед его присваиванием переменной "y".
 *
 * у=++х
 * равнозначна следующим двум строкам кода:
 * х = х + 1;
 * у = х;
 *
 * Если операторы переписать следующим образом:
 * х = 42;
 * у = х++;
 *
 * Значение переменной "х" извлекается
 * до выполнения операции инкремента,
 * поэтому переменной "y"
 * присваивается значение 42.
 *
 * В обоих случаях значение переменной "x"
 * устанавливается равным 43.
 *
 *
 * у = х++;
 * равнозначна следующим двум операторам:
 * У = х;
 * х = х + 1;
 */
public class IncDec {
    public static void main(String[] args) {

        // Пример 1:
        int x, y;
        System.out.println("int x, y\n");

        // Префиксная форма:
        x = 42;
        y = ++x;
        System.out.println("Префиксная форма");
        System.out.println("x = 42;");
        System.out.println("y = ++x; y = " + y);

        // Постфиксная форма:
        x = 42;
        y = x++;
        System.out.println("\nПостфиксная форма");
        System.out.println("x = 42;");
        System.out.println("y = x++; y = " + y);

        int a = 1;
        int b = 2;
        int c, d;

        c = ++b;
        d = a++;
        c++;

        // Вывод в консоль результат выполнения программы:
        System.out.println("\nint a = 1;");
        System.out.println("int b = 2;");
        System.out.println("int c, d;");

        System.out.println("\nc = ++b;");
        System.out.println("d = a++;");
        System.out.println("c++;");

        System.out.println("\na = " + a);
        System.out.println("b = " + b);
        System.out.println("c = " + c);
        System.out.println("d = " + d);
    }
}