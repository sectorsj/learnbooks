package ru.sectorsj.book.shild.javaguade._6_classes_163_184._6_1_1_0_common_class_form_163;


/**
 * 6.1.1.0 - ОБЩАЯ ФОРМА КЛАССА
 *
 * КЛАССЫ:
 *
 * При определении класса объявляется его:
 * - форма (конкретная)
 * - сущность
 *
 * 1) Для этого указываются:
 *    - данные, которые он содержит
 *    - код, воздействующий на эти данные
 *
 * 2) Простые классы могут содержать
 *    только код или только данные.
 *
 * 3) Большинство классов,
 *    применяемых в реальных программах,
 *    содержат оба компонента.
 *
 * 4) Код класса - определяет интерфейс для его данных.
 *
 * 5) Для объявления класса
 *    служит ключевое слово class.
 *
 * ВАЖНО!
 * Упоминавшиеся до сих пор классы
 * на самом деле представляли собой
 * очень ограниченные примеры
 * полной формы их объявления.
 *
 * Классы могут быть/являются значительно более сложными.
 *
 * Упрощенная общая форма класса:
 *
 * class имя_класса {
 *     Тип переменная_экземпляра(1);
 *     Тип переменная_экземпляра(2);
 *     // ...
 *     Тип переменная_экземпляра(n);
 *
 *
 *     Тип имя_метода(1)(список_параметров) {
 *         //тело метода
 *     }
 *     Тип имя_метода(2)(список_параметров) {
 *         // тело метода
 *     }
 *     // ...
 *     Тип имя_метода(n)(список_параметров) {
 *         //тело метода
 *     }
 * }
 *
 * 1) "переменная_экземпляра" - данные, или переменные определенные в классе;
 *
 * 2) Код содержится в теле "методов()".
 *
 * 3) члены класса - это определенные в классе:
 *                    - "переменные_экземпляра"
 *                    - "методы()"
 *
 * 4) В большинстве классов:
 *     - действия над "переменными_экземпляра"
 *     - доступ к "переменными_экземпляра"
 *    осуществляют "методы()",
 *    определенные в этом классе.
 *
 * 5) "методы()" в основном определяют порядок
 *    использования данных класса.
 *
 * 6) Данные или переменные, определенные в классе,
 *    называются "переменными_экземпляра",
 *    т.к. каждый экземпляр /объект класса
 *    содержит собственные копии этих переменных.
 *
 * 7) Данные одного объекта отделены и отличаются
 *    от данных другого объекта.
 *
 * МЕТОДЫ:
 * 1) Все методы имеют ту же общую форму, что и метод main(),
 *    который употреблялся в рассматривавшихся до сих пор примерах.
 *
 * 2) Большинство методов редко объявляются как static или public.
 *
 * 3) В общей форме класса отсутствует определение метода main().
 *
 * 4) Классы Java могут и не содержать метод main().
 *    Его обязательно указывать только в тех случаях,
 *    когда данный класс служит отправной точкой
 *    для выполнения программы.
 *
 * 5) В некоторых видах прикладных программ на Java
 *    метод main() вообще не требуется.
 */
public class CommonClassForm {
}