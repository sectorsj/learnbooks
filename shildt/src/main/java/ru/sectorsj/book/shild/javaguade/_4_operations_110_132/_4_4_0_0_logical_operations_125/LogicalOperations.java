package ru.sectorsj.book.shild.javaguade._4_operations_110_132._4_4_0_0_logical_operations_125;

/**
 * 4.3.1.0 - Логические операции
 *
 * ВАЖНО!
 * Описываемые в этом разделе логические операции
 * выполняются только с операндами типа boolean.
 *
 * Все логические операции с двумя операндами
 * соединяют два логических значения,
 * образуя результирующее логическое значение.
 *
 * Все доступные в Java логические операции перечислены в табл. 4.5.
 *
 * Таблица 4.5 Логические операции в Java
 * | Операция |                        Описание
 * | ---------|--------------------------------------------------------------|
 * |     &    |    Логическая операция И                                     |
 * |     |    |    Логическая операция ИЛИ                                   |
 * |     ^    |    Логическая операция исключающее ИЛИ                       |
 * |    ||    |    Укороченная логическая операция ИЛИ                       |
 * |    &&    |    Укороченная логическая операция И                         |
 * |     !    |    Логическая унарная операция НЕ                            |
 * |    &=    |    Логическая операция И с присваиванием                     |
 * |    |=    |    Логическая операция ИЛИ с присваиванием                   |
 * |    ^=    |    Логическая операция исключающее ИЛИ с присваиванием       |
 * |    ==    |    Равенство                                                 |
 * |    !=    |    Неравенство                                               |
 * |    ?:    |    Тернарная условная операция типа если..., то..., иначе... |
 *
 * Логические операции:
 *  - "&"
 *  - "|"
 *  - "^"
 * воздействуют на значения типа boolean
 * точно так же, как и на отдельные двоичные разряды
 * целочисленных значений.
 *
 * "!" - Логическая операция "НЕ"
 *       инвертирует логическое состояние:
 *       а) !true == false
 *       б) !false == true
 *
 * В табл. 4.6 Результаты выполнения каждой из логических операций.
 *
 *                          ИЛИ       И      искл ИЛИ    НЕ
 * |    A    |    B    |   A|B   |   A&B   |   A^B   |   !A    |
 * |_________|_________|_________|_________|_________|_________|
 * |  false  |  false  |  false  |  false  |  false  |  true   |
 * |  true   |  false  |  true   |  false  |  true   |  false  |
 * |  false  |  true   |  true   |  false  |  true   |  true   |
 * |  true   |  true   |  true   |  true   |  false  |  false  |
 *
 *
 *
 *
 *
 *
 *
 * Укороченная форма логических операций
 *
 * if (denom != О && num / denom > 10)
 *
 * Благодаря применению укороченной формы логической операции И (&&)
 * отсутствует риск возникновения исключений во время выполнения в связи
 * с равенством нулю знаменателя (denom).
 * Если бы в данной строке кода был указан одинарный знак & логической операции И,
 * то вычислялись бы обе части выражения, что привело бы к исключению во
 * время выполнения в связи с тем, что значение переменной denom равно нулю.
 *
 * Исключение
 *
 * В данном примере одиночный знак & гарантирует выполнение операции инкремента
 * над значением переменной е, независимо от того, равно ли 1 значение переменной с.
 *
 * if(c==l & е++ < 100) d = 100;
 *
 * На заметку!
 * В формальной спецификации языка Java укороченные логические операции называются
 * условными.
 *
 * Например:
 * условная логическая операция И
 * или
 * условная логическая операция ИЛИ.
 */
public class LogicalOperations {
}
