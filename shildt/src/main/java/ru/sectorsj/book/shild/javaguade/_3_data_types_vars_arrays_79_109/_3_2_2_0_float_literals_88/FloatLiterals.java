package ru.sectorsj.book.shild.javaguade._3_data_types_vars_arrays_79_109._3_2_2_0_float_literals_88;

/**
 * 3.2.2.0 - Литералы с плавающей точкой
 *
 * Литералы с плавающей точкой
 * - это числа с плавающей точкой
 *   представляют десятичные значения
 *   с дробной частью.
 *
 * Они могут быть выражены в:
 * 1) стандартной форме записи
 *
 *    Число в стандартной форме записи состоит из:
 *    1) целого числа с последующей десятичной точки
 *    2) дробной части
 *
 *    Примеры 1:
 *    допустимая стандартная формы записи
 *    значений с плавающей точкой
 *    double x1 = 2.0;
 *    double x2 = 3.14159;
 *    double x3 = 0.6667;
 *
 * 2) экспоненциальной (научной) форме записи.
 *
 *    В экспоненциальной форме записи используется
 *    стандартная форма записи чисел с плавающей точкой,
 *    дополненная суффиксом,
 *    обозначающим степень числа 10,
 *    на которую следует умножить данное число.
 *
 *    Для указания экспоненциальной части
 *    в данной форме записи служит символ Е или е,
 *    за которым следует десятичное число
 *    (положительное или отрицательное).
 *
 *    Примеры 2:
 *    допустимая формы экспоненциальной записи:
 *     double x1 = 6.022E23;
 *     double x2 = 314159E-05;
 *     double x3 = 2e+100;
 *
 * По умолчанию в Java литералам с плавающей точкой
 * присваивается тип double.
 *
 * Чтобы указать литерал типа float,
 * его следует дополнить символом F или f.
 *
 * Литерал типа double можно также указать явно,
 * дополнив символом D или d.
 * Но это, конечно, излишне.
 *
 * Значения используемого по умолчанию типа double
 * занимают в оперативной памяти 64 бита,
 * тогда как для хранения значений более короткого типа float
 * требуется только 32 бита.
 *
 * Шестнадцатеричные литералы с плавающей точкой
 * также поддерживаются, но они применяются редко.
 *
 * Они должны быть записаны в форме,
 * подобной экспоненциальному представлению,
 * но с обозначением Р или р вместо Е или е.
 *
 * Пример 3:
 * вполне допустимый 16-разрядный литерал
 * с плавающей точкой
 * - 0х12.2Р2
 *
 * Значение после буквы Р
 * называется двоичным порядком
 * и обозначает степень числа два,
 * на которое умножается заданное число.
 *
 * Поэтому литерал 0х12.2Р2 представляет число 72.5.
 *
 * Начиная с версии JDK 7,
 * в литералы с плавающей точкой
 * можно вводить один знак подчеркивания или больше,
 * подобно целочисленных литералов.
 *
 * Знаки подчеркивания облегчают
 * чтение больших литералов с плавающей точкой.
 *
 * При компиляции символы подчеркивания игнорируются.
 *
 * Пример 4:
 * в следующей строке кода
 * переменной num присваивается значение 9423497862.0.
 *  double num = 9_423_497_862.0;
 *
 *
 * Знаки подчеркивания:
 * 1) будут проигнорированы.
 *    Как и в целочисленных литералах,
 *    знаки подчеркивания могут служить
 *    только для разделения цифр.
 *
 * 2) нельзя указывать:
 *    1) в начале
 *    2) в конце литералов,
 *    но вполне допустимо между двумя цифрами,
 *    причем не один, а несколько.
 *
 * 3) допустимо также указывать
 *    в дробной части числа.
 *    Например, приведенная ниже строка кода считается вполне допустимой.
 *
 *    Пример 5:
 *    в данном случае дробная часть составляет ".109" -> ".1_0_9".
 *      double num = 9_423_497.1_0_9;
 */
public class FloatLiterals {
    // Примеры 1:
    double num1 = 2.0;
    double num2 = 3.14159;
    double num3 = 0.6667;

    // Примеры 2:
    double num4 = 6.022E23;
    double num5 = 314159E-05;
    double num6 = 2e+100;

    // Пример 3:
    double num7 = 0x12.2P2;

    // Пример 4:
    double num8 = 9_423_497_862.0;

    // Пример 5:
    double num = 9_423_497.1_0_9;
}
