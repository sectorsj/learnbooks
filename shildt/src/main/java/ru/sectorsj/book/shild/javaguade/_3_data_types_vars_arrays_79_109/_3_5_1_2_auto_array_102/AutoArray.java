package ru.sectorsj.book.shild.javaguade._3_data_types_vars_arrays_79_109._3_5_1_2_auto_array_102;

/**
 * Пример 2:
 *
 * 1) Массивы можно инициализировать при их объявлении.
 *
 *    Этот процесс во многом аналогичен
 *    инициализации простых типов.
 *
 *    Инициализатор массива - это список выражений, разделяемый запятыми
 *                            и заключаемый в фигурные скобки.
 *
 *    Запятые разделяют значения элементов массива.
 *
 *    Массив автоматически создается настолько большим,
 *    чтобы вмещать все элементы,
 *    указанные в инициализаторе массива.
 *
 *    В этом случае потребность в операции "new" отпадает.
 *
 * 2) Чтобы сохранить количество дней в каждом месяце,
 *    можно воспользоваться приведенным ниже кодом,
 *    где создается и инициализируется массив целых значений.
 *
 *    Усовершенствованная версия предыдущей программы
 *    При выполнении кода на консоль выводится
 *    такой же результат, как и в Примере 1.
 *
 * 3) Исполняющая система Java производит проверку,
 *    чтобы убедиться,
 *    не была ли случайно предпринята попытка
 *    присвоения или обращения к значениям,
 *    которые выходят за пределы
 *    допустимого диапазона индексов массива.
 *
 * 4) Исполняющая система Java
 *    будет проверять соответствие значения
 *    каждого индекса массива
 *      month_days
 *    допустимому диапазону (12)
 *      от О до 11 включительно.
 *
 * 5) Любая попытка обратиться к элементам массива
 *      month_days
 *    за пределами этого диапазона,
 *    т.е. указать отрицательные индексы или же индексы,
 *    превышающие длину массива,
 *    приведет к ошибке при выполнении данного кода.
 */
class AutoArray{
    public static void main(String[] args) {
        //Пример 2:
        // Альтернативный способ объявления массива
        int month_days[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

        System.out.println( "В апреле " + month_days[3] + " дней.");
    }
}