package ru.sectorsj.book.shild.javaguade._6_classes_163_184._6_4_1_0_methods_in_class_171;

/**
 * 6.4.1.0 - ВВОД МЕТОДА В КЛАСС - Вох
 *
 * Метод - это способ реализации подпрограмм в Java.
 *
 * Было бы очень удобно создать класс, содержащий только данные,
 * но в реальных программах подобное встречается крайне редко.
 *
 * В большинстве случаев для доступа к переменным экземпляра,
 * определенным в классе, приходится пользоваться методами.
 *
 * 1) Методы определяют интерфейс для большинства классов.
 *
 *    Это позволяет тому, кто реализует класс,
 *    скрывать конкретное расположение внутренних структур данных
 *    за более понятными абстракциями методов.
 *
 * Методы бывают:
 * 1) обеспечивающих доступ к данным,
 * 2) применяемые в самом классе.
 *
 *
 * Ввод метода в класс Вох.
 *
 * 1) Класс Вох мог бы лучше справиться
 *    с расчетом объема параллелепипеда, чем класс BoxDemo.
 *
 * 2) Было бы логично, если бы такой расчет выполнялся в классе Вох,
 *    поскольку объем параллелепипеда зависит от его размеров.
 *
 * 3) В класс Вох следует ввести метод.
 *
 * Пример 1.1, 1.2:
 * В этой программе применяется метод, введенный в класс Вох.
 *
 * Результат выполнения программы:
 * Объем параллелепипеда = 3000.0
 * Объем параллелепипеда = 162.0
 *
 * ВАЖНО!
 * Внимательно рассмотреть 2 строки кода:
 * mybox1.volume();
 * mybox2.volume();
 *
 * 1) В 1 строке кода вызывается метод volume() для объекта mybox1.
 *
 * 2) Метод volume() вызывается по отношению к объекту mybox1,
 *    для чего было указано имя объекта,
 *
 * 3) а вслед за ним - операция-точка.
 *
 * В результате вызова метода:
 * - mybox1.volume()
 * выводится объем параллелепипеда, определяемого объектом mybox1.
 *
 * В результате вызова метода:
 * - mybox2.volume()
 * выводится объем параллелепипеда, определяемого объектом mybox2.
 *
 *
 * При каждом вызове метод volume(),
 * он выводит объем указанного параллелепипеда.
 *
 * 4) При вызове метода mybox1.volume()
 *    исполняющая система Java передает управление коду,
 *    определенному в теле метода volume().
 *
 * 5) По окончании выполнения всех операторов в теле метода
 *    управление возвращается вызывающей части программы
 *
 * 6) Далее ее выполнение продолжается со строки кода,
 *    следующей за вызовом метода.
 *
 * ВАЖНО!!
 * В методе volume() следует обратить внимание на очень важную особенность.
 * Ссылка на переменные экземпляра:
 * - width
 * - height
 * - depth
 * делается непосредственно без указания перед ними
 * имени объекта или операции-точки.
 *
 * 1) Метод всегда вызывается по отношению
 *    к какому-то объекту его класса.
 *
 * 2) Когда в методе используется переменная экземпляра,
 *    определенная в его же классе,
 *    это делается непосредственно:
 *      - без указания явной ссылки на объект
 *      - и применения операции-точки (.)
 *
 * 3) Как только этот вызов сделан, объект известен.
 *
 * 4) В теле метода вторичное указание объекта совершенно излишне.
 *    Переменные экземпляра:
 *      - width
 *      - height
 *      - depth
 *    неявно ссылаются на копии этих переменных,
 *    хранящиеся в объекте, который вызывает метод volume().
 *
 *  Правило:
 *  1)  Когда доступ к переменной экземпляра осуществляется из кода,
 *      не входящего в класс, где определена переменная экземпляра,
 *      следует непременно указать объект с помощью операции-точки.
 *
 *  2)  Когда такой доступ осуществляется из кода, входящего в класс,
 *      где определена переменная экземпляра,
 *      ссылка на переменную может делаться непосредственно.
 *
 *  3) Эти правила относятся и к методам.
 */

// Пример 1.1:
class Box{
    double width;
    double height;
    double depth;

    // Вывести объем параллелепипеда
    void volume() {
        System.out.print("Объем параллелепипеда = ");
        System.out.println(width * height * depth);
    }
}

class BoxDemo3 {
    public static void main(String[] args) {

        // Пример 1.2:
        Box mybox1 = new Box();
        Box mybox2 = new Box();

        // Присвоить значение переменным экземпляра mybox1
        mybox1.width = 10;
        mybox1.height = 20;
        mybox1.depth = 15;

        // Присвоить другие значение переменным экземпляра mybox2
        mybox2.width = 3;
        mybox2.height = 6;
        mybox2.depth = 9;

        // Вывести объем первого параллелепипеда
        mybox1.volume();

        // Вывести объем второго параллелепипеда
        mybox2.volume();
    }
}