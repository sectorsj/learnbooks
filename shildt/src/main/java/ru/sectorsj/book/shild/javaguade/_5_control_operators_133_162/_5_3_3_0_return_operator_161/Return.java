package ru.sectorsj.book.shild.javaguade._5_control_operators_133_162._5_3_3_0_return_operator_161;


/**
 * 5.3.3.0 - Оператор return
 *
 * Полное описание оператора return (глава 6)
 *
 * return - управляющий оператор служит
 *          для выполнения явного выхода из метода.
 *          Он снова передает управление коду,
 *          из которого был вызван данный метод.
 *
 * Оператор return:
 * 1) относится к операторам перехода.
 *
 * 2) используется в любом месте метода для
 *    возврата управления тому коду,
 *    из которого был вызван данный метод.
 *
 * 3) немедленно прекращает выполнение метода,
 *    в теле которого он находится.
 *
 * Пример 1:
 * Продемонстрировать применение оператора return
 *
 * Результат выполнения программы:
 * До возврата.
 *
 * В примере 1:
 * 1) наличие условного оператора if(t) обязательно.
 *
 * 2) выполнение оператора return приводит
 *    к возврату управления исполняющей системе Java,
 *    поскольку именно в ней вызывается метод main().
 *
 * 3) Сразу после выполнения оператора return
 *    управление возвращается вызывающему объекту.
 *
 * 4) Без него компилятор Java выдаст сообщение об ошибке
 *    типа "unreachable code" (недостижимый код),
 *    потому что последний вызов метода println()
 *    вообще не будет выполняться.
 *
 * 5) Во избежание подобной ошибки пришлось прибегнуть
 *    к помощи условного оператора if,
 *    чтобы ввести компилятор в заблуждение.
 *
 * 6) Это сделано исключительно с целью
 *    продемонстрировать применение оператора return.
 */
public class Return {
    public static void main(String[] args) {

        // Пример 1:
        boolean t = true;

        System.out.println("До возврата.");

        // возврат в вызываемый код
        if (t) return;
        System.out.println("Этот оператор выполняться не будет");
    }
}