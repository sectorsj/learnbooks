package ru.sectorsj.book.shild.javaguade._6_classes_163_184._6_5_0_0_constructors_intro_177;

/**
 *  6.5.0.0 - КОНСТРУКТОРЫ
 *
 * Инициализация всех переменных класса при каждом создании
 * его экземпляра может оказаться утомительным процессом.
 *
 * ВАЖНО!
 * Даже при добавлении служебных функций
 * вроде метода setDimension() было бы проще и удобнее,
 * если все действия по установке значений переменных
 * выполнялись при первом создании объекта.
 *
 * 1) Потребность в инициализации возникает очень часто,
 *    объектам в Java разрешается выполнять
 *    собственную инициализацию при их создании.
 *
 * 2) Автоматическая инициализация - осуществляется с помощью конструктора.
 *
 * Конструктор - инициализирует объект непосредственно
 *               во время его создания.
 *
 * 3) Имя конструктора совпадает с именем класса,
 *    в котором он находится,
 *    а синтаксис аналогичен синтаксису метода.
 *
 * 4) Как только конструктор определен,
 *    он автоматически вызывается при создании объекта
 *    перед окончанием выполнения операции "new".
 *
 * 5) Конструкторы выглядят не совсем привычно,
 *    поскольку они не имеют возвращаемого типа - даже типа void.
 *
 * 6) Это объясняется тем, что неявно заданным возвращаемым типом
 *    конструктора класса является тип самого класса.
 *
 * 7) Именно конструктор инициализирует
 *    внутреннее состояние объекта так,
 *    чтобы код, создающий экземпляр,
 *    сразу содержал полностью инициализированный,
 *    пригодный к употреблению объект.
 *
 */
public class ConstructorsIntro {
}