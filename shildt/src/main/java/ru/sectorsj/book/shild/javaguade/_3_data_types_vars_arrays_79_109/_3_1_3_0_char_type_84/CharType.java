package ru.sectorsj.book.shild.javaguade._3_data_types_vars_arrays_79_109._3_1_3_0_char_type_84;

/**
 * 3.1.3.0 - Символы
 *
 * char - тип данных для хранения символов.
 *          - 16-разрядный
 *          - положительный
 *          - диапазон от О до 65536
 *
 * В Java символы представлены в Юникоде (Unicode),
 * определяющем полный набор международных символов
 * на всех известных языках мира.
 *
 * Юникод унифицирует десятки наборов символов, в том числе:
 *  - латинский алфавит,
 *  - греческий алфавит
 *  - арабский алфавит,
 *  - кириллицу,
 *  - иврит,
 *  - японские иероглифы
 *  - тайские иероглифы
 *  - и многие другие символы.
 *
 * 1) На ранних стадиях в Java для хранения
 *    этих символов требовалось 16 бит,
 *    поэтому в Java был внедрен 16-разрядный тип char.
 *
 * 2) Отрицательных значений типа char не существует.
 * 3) Стандартный набор символов,
 *    известный как код ASCII содержит значения:
 *      - от О до 127,
 * 4) Расширенный 8-разрядный набор символов
 *    ISO-Latin-1 значения:
 *      - от О до 255.
 * 5) Т.к. язык Java предназначен для написания программ,
 *    которые можно применять во всем мире,
 *    то употребление в нем кодировки в Юникоде
 *    для представления символов вполне обоснованно.
 *
 *    Пользоваться кодировкой в Юникоде
 *    для локализации программ на таких языках, как:
 *      - английский
 *      - немецкий
 *      - испанский
 *      - французский
 *    не совсем эффективно,
 *    поскольку для представления символов
 *    из алфавита этих языков достаточно и 8-бит.
 *
 *    Но это та цена, которую приходится платить
 *    за переносимость программ в глобальном масштабе.
 *
 * ВАЖНО!
 * Чтобы узнать подробности о кодировке в Юникоде,
 * можно обратиться по адресу http://www.unicode.org.
 *
 * ВАЖНО!!
 * В формальной спецификации Java тип char
 * упоминается как целочисленный, это означает,
 * что он относится к той же общей категории, что и типы:
 *  - int
 *  - short
 *  - long
 *  - byte
 * Но поскольку основное назначение типа char,
 * представлять символы в Юникоде,
 * то он относится к самостоятельной категории.
 */

public class CharType {
    // объявления переменных типа char
    char a;
    char b, c;

    public static void main(String[] args) {
        char geo = 'ჰ';
        System.out.println(geo);
    }
}